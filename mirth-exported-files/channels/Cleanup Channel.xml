<channel>
  <id>f9850254-1041-4790-8ee8-dce5c0183a2a</id>
  <name>Cleanup Channel</name>
  <description>This channel is run once a day and attempts to clean up any records. Cleanup is defined as any forms that have yet to be processed (processed_by_mirth = false) and are thus waiting for processing. Processing will not occur based on 3 filters: no visit found, no location found or no household found. This channel checks the submission dates of such forms, and if they are past configurable thresholds, forces them to be processed.</description>
  <enabled>true</enabled>
  <version>2.2.1.5861</version>
  <lastModified>
    <time>1345423503000</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>8</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="DataType">JavaScript Reader</property>
      <property name="host">sink</property>
      <property name="pollingFrequency">60000</property>
      <property name="pollingType">interval</property>
      <property name="script">var entries = new java.util.ArrayList();
var warningMsgs = [];

function iterateResult(result, formName) {
  while(result.next()) {
    var xml = convertResultSetToXml(result);
    if (shouldFailForm(xml[&quot;_creation_date&quot;].toString())) {
      xml.@form = formName;
      entries.add(xml.toString());
    } else if (shouldWarnUser(xml[&quot;_creation_date&quot;].toString())) {
      warningMsgs.push(formName + &quot; (WARN): &quot; + xml[&quot;_uri&quot;].toString());
      logger.warn(&quot;Found a form that hasn&apos;t been processed within warning timeout limit: &quot; + formName + &quot; (WARN): &quot; + xml[&quot;_uri&quot;].toString());
    } 
  }
}

var dbConn = DatabaseConnectionFactory.createDatabaseConnection(globalMap.get(&quot;jdbcDriver&quot;), globalMap.get(&quot;odkJdbcDatabaseUrl&quot;), globalMap.get(&quot;dbUser&quot;), globalMap.get(&quot;dbPass&quot;));

// visits
var visitResults = dbConn.executeCachedQuery(&quot;SELECT _URI, _creation_date, visit_date, derived_from_uri, field_worker_id, round_number, location_id FROM &quot; +  globalMap.get(&quot;visitTableName&quot;) + &quot; WHERE processed_by_mirth is null AND supervisor_status = 1&quot;);
iterateResult(visitResults, &quot;visit&quot;);

// births
var birthResult = dbConn.executeCachedQuery(&quot;SELECT _URI, _CREATION_DATE, MOTHER_ID, HOUSEHOLD_NAME, CHILDREN_SECOND_CHILD_SEX, CHILDREN_FIRST_CHILD_SEX, FATHER_ID, CHILDREN_SECOND_CHILD_LAST_NAME, FIRST_LIVE_BIRTH, CHILDREN_SECOND_CHILD_FIRST_NAME, CHILDREN_FIRST_CHILD_LAST_NAME, TOTAL_CHILDREN_BORN, FATHER_NAME, NUM_LIVE_BIRTHS_FROM_RECENT_PREG, CHILDREN_SECOND_CHILD_ID, DERIVED_FROM_URI, CHILDREN_FIRST_CHILD_ID, CHILDREN_FIRST_CHILD_FIRST_NAME, HOUSE_ID, BIRTH_PLACE_OTHER, MOTHER_NAME, UMBILICAL_CORD_APPLIED, REPORTED_BY, RECORDED_DATE, HOUSEHOLD_ID, CHILD_DOB, COLLECTED_BY, UMBILICAL_CORD_CUTTING, BIRTH_PLACE, NUM_LIVE_BIRTHS, MOTHER_LINE_NUMBER FROM &quot; + globalMap.get(&quot;birthRegistrationTableName&quot;) + &quot; WHERE processed_by_mirth = false AND supervisor_status = &apos;1&apos;&quot;);
iterateResult(birthResult, &quot;birth&quot;);

// deaths
var deathResult = dbConn.executeCachedQuery(&quot;SELECT _URI, _CREATION_DATE, DERIVED_FROM_URI, BASIC_INFORMATION_HOUSEHOLD_ID, SORCE_OF_INFORMATON_REPORTED_BY, BASIC_INFORMATION_PERMANENT_ID, BASIC_INFORMATION_DATE_OF_DEATH, BASIC_INFORMATION_FIELD_WORKER, BASIC_INFORMATION_DATE_OF_INTERVIEW, BASIC_INFORMATION_PLACE_OF_DEATH, BASIC_INFORMATION_SEX, BASIC_INFORMATION_HOUSE_ID, BASIC_INFORMATION_PLACE_OF_DEATH_OTHER, BASIC_INFORMATION_DECEASED_NAME, BASIC_INFORMATION_HOUSEHOLD_NAME FROM &quot; + globalMap.get(&quot;deathRegistrationTableName&quot;) + &quot; WHERE processed_by_mirth = false AND supervisor_status = &apos;1&apos;&quot;);
iterateResult(deathResult, &quot;death&quot;);

// in migrations
var migrationInResult = dbConn.executeCachedQuery(&quot;SELECT _URI, _CREATION_DATE, SECTION5_FR_SEC, SECTION6_MIN_PERSON_FN, SECTION6_MIN_PERSON_LN, RELATIONSHIP_TO_GROUP_HEAD, SECTION5_FR_VILL, SECTION5_FR_PN, PERM_ID, EVER_REG, CURR_HH_ID, COMP_ID, SECTION6_MIN_PERSON_MOTHER_ID, FW, REASONFORMIGRATION, TEMP_ID, SECTION6_MIN_PERSON_BIRTHDATE, SECTION5_FR_HN, MFROM_HH_N, SECTION6_MIN_PERSON_FATHER_ID, FROM_OTHER, SECTION6_SEX, MFROM_HN, DERIVED_FROM_URI, SECTION5_FR_ON, OLD_NAME, MFROM_VILL, SECTION5_FR_HH_N, CURR_HH_N, DATE_MI, CURR_H_N, SECTION6_MIN_PERSON_EDUCATION, MFROM_SEC, DINT, FROM_FIELD, MFROM_PN, REASONFORMIGRATION_OTHER FROM &quot; +  globalMap.get(&quot;migrationInTableName&quot;) + &quot; WHERE processed_by_mirth = false AND supervisor_status = &apos;1&apos;&quot;);
iterateResult(migrationInResult, &quot;inmigration&quot;);

// out migrations
var outmigrationResult = dbConn.executeCachedQuery(&quot;SELECT _URI, _CREATION_DATE, BASIC_INFO_INTERVIEW_DATE, MOVE_AWAY_FROM_MOVE_AWAY_FROM_HOUSE_NAME, BASIC_INFO_COLLECTED_BY, DERIVED_FROM_URI, MOVE_AWAY_TO_PLACE_MOVED_TO, MOVE_AWAY_TO_PLACE_MOVED_TO_PHONE_NUMBER, MOVE_AWAY_TO_PLACE_MOVED_TO_OTHER, MOVE_AWAY_TO_PLACE_MOVED_TO_SECTION, MOVE_AWAY_TO_PLACE_MOVED_TO_REASON, MOVE_AWAY_TO_PLACE_MOVED_TO_HOUSE_NAME, BASIC_INFO_PERM_ID, MOVE_AWAY_FROM_MOVE_AWAY_FROM_HOUSEHOLD_ID, BASIC_INFO_SEX, MOVE_AWAY_FROM_MOVE_AWAY_FROM_HOUSEHOLD_NAME, MOVE_AWAY_TO_PLACE_MOVED_TO_VILLAGE, MOVE_AWAY_FROM_MOVE_AWAY_FROM_HOUSE_ID, MOVE_AWAY_TO_PLACE_MOVED_TO_REASON_OTHER, BASIC_INFO_MIGRATION_DATE, BASIC_INFO_MIGRANT_NAME FROM &quot; +  globalMap.get(&quot;outmigrationTableName&quot;) + &quot; WHERE processed_by_mirth = false AND supervisor_status = &apos;1&apos;&quot;);
iterateResult(outmigrationResult, &quot;outmigration&quot;);

// pregnancy obs
var obsResult = dbConn.executeCachedQuery(&quot;SELECT _URI, _CREATION_DATE, DERIVED_FROM_URI, REPORTBY, HH_NAME, HEALTH_FAC, TT_INJECT, COMP_ID, HH_ID, FW, HEALTH_FAC_OTHER, ATTEND_CLI, PERM_ID_PW, DINT, NAME_PW, FIRST_PG, MPREG, LMP FROM &quot; + globalMap.get(&quot;pregnancyRegistrationTableName&quot;) + &quot; WHERE processed_by_mirth = false AND supervisor_status = &apos;1&apos;&quot;);
iterateResult(obsResult, &quot;pregnancyobservation&quot;);

// vaccination
var vacResult = dbConn.executeCachedQuery(&quot;SELECT _URI, _CREATION_DATE, derived_from_uri, child_id, collected_by, dates_measels, injection_on_thigh, bcg_scar, dates_dpt1, dates_dpt2, dates_dpt3, drop_in_mouth, dates_bcg, dates_polio1, dates_polio2, dates_polio3, dates_polio4 FROM &quot; +  globalMap.get(&quot;vaccinationTableName&quot;) + &quot; WHERE (processed_by_mirth is false OR processed_by_mirth is null) AND supervisor_status = 1&quot;);
iterateResult(vacResult, &quot;vaccination&quot;);

if (warningMsgs.length &gt; 0) {
  var body = warningMsgs.join(&quot;\n&quot;);
  alerts.sendAlert(body);
}


dbConn.close();

return entries;</property>
    </properties>
    <transformer>
      <steps/>
      <inboundProtocol>XML</inboundProtocol>
      <outboundProtocol>XML</outboundProtocol>
      <inboundProperties>
        <property name="stripNamespaces">true</property>
      </inboundProperties>
      <outboundProperties>
        <property name="stripNamespaces">true</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules/>
    </filter>
    <transportName>JavaScript Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <version>2.2.1.5861</version>
  </sourceConnector>
  <destinationConnectors>
    <connector>
      <name>Visit</name>
      <properties>
        <property name="DataType">Channel Writer</property>
        <property name="host">cfd0753f-9870-4974-877f-029758d4e051</property>
        <property name="synchronised">1</property>
        <property name="template">${message.rawData}</property>
      </properties>
      <transformer>
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">true</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Visit Filter</name>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>return msg[&apos;@form&apos;].toString() === &quot;visit&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&apos;@form&apos;].toString() === &quot;visit&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.2.1.5861</version>
    </connector>
    <connector>
      <name>In Migration</name>
      <properties>
        <property name="DataType">Channel Writer</property>
        <property name="host">5f77391a-bf55-446f-bc5e-c96b87bbcc0c</property>
        <property name="synchronised">1</property>
        <property name="template">${message.rawData}</property>
      </properties>
      <transformer>
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">true</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Visit Filter</name>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>return msg[&apos;@form&apos;].toString() === &quot;inmigration&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&apos;@form&apos;].toString() === &quot;inmigration&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.2.1.5861</version>
    </connector>
    <connector>
      <name>Death</name>
      <properties>
        <property name="DataType">Channel Writer</property>
        <property name="host">089877a5-7084-4404-9273-95b662ff23fb</property>
        <property name="synchronised">1</property>
        <property name="template">${message.rawData}</property>
      </properties>
      <transformer>
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">true</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Death Filter</name>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>return msg[&apos;@form&apos;].toString() === &quot;death&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&apos;@form&apos;].toString() === &quot;death&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.2.1.5861</version>
    </connector>
    <connector>
      <name>Birth</name>
      <properties>
        <property name="DataType">Channel Writer</property>
        <property name="host">1a15fd23-bde7-4646-9e40-b79a8933aa8f</property>
        <property name="synchronised">1</property>
        <property name="template">${message.rawData}</property>
      </properties>
      <transformer>
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">true</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Death Filter</name>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>return msg[&apos;@form&apos;].toString() === &quot;birth&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&apos;@form&apos;].toString() === &quot;birth&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.2.1.5861</version>
    </connector>
    <connector>
      <name>Pregnancy Obs</name>
      <properties>
        <property name="DataType">Channel Writer</property>
        <property name="host">bfa7dc3a-af2e-40fe-a908-1f5d489ade21</property>
        <property name="synchronised">1</property>
        <property name="template">${message.rawData}</property>
      </properties>
      <transformer>
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">true</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Death Filter</name>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>return msg[&apos;@form&apos;].toString() === &quot;pregnancyobservation&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&apos;@form&apos;].toString() === &quot;pregnancyobservation&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.2.1.5861</version>
    </connector>
    <connector>
      <name>Out Migration</name>
      <properties>
        <property name="DataType">Channel Writer</property>
        <property name="host">8f288ebc-008d-42ab-9a15-8e6637dcee16</property>
        <property name="synchronised">1</property>
        <property name="template">${message.rawData}</property>
      </properties>
      <transformer>
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">true</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Death Filter</name>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>return msg[&apos;@form&apos;].toString() === &quot;outmigration&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&apos;@form&apos;].toString() === &quot;outmigration&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.2.1.5861</version>
    </connector>
    <connector>
      <name>Vaccination</name>
      <properties>
        <property name="DataType">Channel Writer</property>
        <property name="host">9969a21b-e059-4a38-a2d3-aa18bcc690d2</property>
        <property name="synchronised">1</property>
        <property name="template">${message.rawData}</property>
      </properties>
      <transformer>
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">true</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Death Filter</name>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>return msg[&apos;@form&apos;].toString() === &quot;vaccination&quot;;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>return msg[&apos;@form&apos;].toString() === &quot;vaccination&quot;;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.2.1.5861</version>
    </connector>
  </destinationConnectors>
  <properties>
    <property name="clearGlobalChannelMap">true</property>
    <property name="dont_store_filtered">false</property>
    <property name="encryptData">false</property>
    <property name="error_messages_only">false</property>
    <property name="initialState">started</property>
    <property name="max_message_age">-1</property>
    <property name="store_messages">true</property>
    <property name="synchronous">true</property>
    <property name="transactional">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
</channel>