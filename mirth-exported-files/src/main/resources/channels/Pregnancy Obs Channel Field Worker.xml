<channel>
  <id>fe5bf10c-3ad5-43ae-a58b-ef71f2ebb1d3</id>
  <name>Pregnancy Obs Channel Field Worker</name>
  <description>This channel will read submissions from field workers. Those submissions are then forward to the mobile interop server</description>
  <enabled>true</enabled>
  <version>2.2.1.5861</version>
  <lastModified>
    <time>1345825607000</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>3</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="DataType">Database Reader</property>
      <property name="URL">jdbc:mysql://localhost/${odkDatabaseName}</property>
      <property name="ack"></property>
      <property name="ackScript"></property>
      <property name="driver">com.mysql.jdbc.Driver</property>
      <property name="host">query</property>
      <property name="password">${mysqlPass}</property>
      <property name="pollingFrequency">15000</property>
      <property name="pollingType">interval</property>
      <property name="processResultsInOrder">1</property>
      <property name="query"></property>
      <property name="script">var dbConn = DatabaseConnectionFactory.createDatabaseConnection(globalMap.get(&quot;jdbcDriver&quot;), globalMap.get(&quot;odkJdbcDatabaseUrl&quot;), globalMap.get(&quot;dbUser&quot;), globalMap.get(&quot;dbPass&quot;));
var result = dbConn.executeCachedQuery(&quot;SELECT _URI, _CREATION_DATE, REPORTBY, SUPERVISOR_STATUS, HOUSE_ID, HOUSEHOLD_NAME, TT_INJECT, HEALTH_FAC, HOUSE_NAME, VALIDATION_FAILED, HEALTH_FAC_OTHER, LAST_NAME, VISIT_ID, VISIT_DATE, ATTEND_CLI, DERIVED_FROM_URI, FIRST_NAME, FIELD_WORKER_ID, HOUSEHOLD_ID, FIRST_PG, PROCESSED_BY_MIRTH, INDIVIDUAL_ID, LMP, MPREG FROM &quot; + globalMap.get(&quot;pregnancyRegistrationTableName&quot;) + &quot; WHERE processed_by_mirth is null AND supervisor_status is null&quot;);
dbConn.close();

return result;</property>
      <property name="useAck">0</property>
      <property name="useScript">1</property>
      <property name="username">${mysqlUser}</property>
    </properties>
    <transformer>
      <steps/>
      <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+DQo8
cmVzdWx0Pg0KICAgIDxfdXJpPnZhbHVlPC9fdXJpPg0KICAgIDxfY3JlYXRpb25fZGF0ZT52YWx1
ZTwvX2NyZWF0aW9uX2RhdGU+DQogICAgPHJlcG9ydGJ5PnZhbHVlPC9yZXBvcnRieT4NCiAgICA8
c3VwZXJ2aXNvcl9zdGF0dXM+dmFsdWU8L3N1cGVydmlzb3Jfc3RhdHVzPg0KICAgIDxob3VzZV9p
ZD52YWx1ZTwvaG91c2VfaWQ+DQogICAgPGhvdXNlaG9sZF9uYW1lPnZhbHVlPC9ob3VzZWhvbGRf
bmFtZT4NCiAgICA8dHRfaW5qZWN0PnZhbHVlPC90dF9pbmplY3Q+DQogICAgPGhlYWx0aF9mYWM+
dmFsdWU8L2hlYWx0aF9mYWM+DQogICAgPGhvdXNlX25hbWU+dmFsdWU8L2hvdXNlX25hbWU+DQog
ICAgPHZhbGlkYXRpb25fZmFpbGVkPnZhbHVlPC92YWxpZGF0aW9uX2ZhaWxlZD4NCiAgICA8aGVh
bHRoX2ZhY19vdGhlcj52YWx1ZTwvaGVhbHRoX2ZhY19vdGhlcj4NCiAgICA8bGFzdF9uYW1lPnZh
bHVlPC9sYXN0X25hbWU+DQogICAgPHZpc2l0X2lkPnZhbHVlPC92aXNpdF9pZD4NCiAgICA8dmlz
aXRfZGF0ZT52YWx1ZTwvdmlzaXRfZGF0ZT4NCiAgICA8YXR0ZW5kX2NsaT52YWx1ZTwvYXR0ZW5k
X2NsaT4NCiAgICA8ZGVyaXZlZF9mcm9tX3VyaT52YWx1ZTwvZGVyaXZlZF9mcm9tX3VyaT4NCiAg
ICA8Zmlyc3RfbmFtZT52YWx1ZTwvZmlyc3RfbmFtZT4NCiAgICA8ZmllbGRfd29ya2VyX2lkPnZh
bHVlPC9maWVsZF93b3JrZXJfaWQ+DQogICAgPGhvdXNlaG9sZF9pZD52YWx1ZTwvaG91c2Vob2xk
X2lkPg0KICAgIDxmaXJzdF9wZz52YWx1ZTwvZmlyc3RfcGc+DQogICAgPHByb2Nlc3NlZF9ieV9t
aXJ0aD52YWx1ZTwvcHJvY2Vzc2VkX2J5X21pcnRoPg0KICAgIDxpbmRpdmlkdWFsX2lkPnZhbHVl
PC9pbmRpdmlkdWFsX2lkPg0KICAgIDxsbXA+dmFsdWU8L2xtcD4NCiAgICA8bXByZWc+dmFsdWU8
L21wcmVnPg0KPC9yZXN1bHQ+DQo=</inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundProtocol>XML</inboundProtocol>
      <outboundProtocol>XML</outboundProtocol>
      <inboundProperties>
        <property name="stripNamespaces">true</property>
      </inboundProperties>
      <outboundProperties>
        <property name="stripNamespaces">true</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules/>
    </filter>
    <transportName>Database Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <version>2.2.1.5861</version>
  </sourceConnector>
  <destinationConnectors>
    <connector>
      <name>Destination 1</name>
      <properties>
        <property name="DataType">JavaScript Writer</property>
        <property name="host">sink</property>
        <property name="script">var origXml = new XML(messageObject.getRawData());

executeUpdateQuery(&quot;UPDATE &quot; + globalMap.get(&quot;pregnancyRegistrationTableName&quot;) + &quot; SET processed_by_mirth = true WHERE _URI = &apos;&quot; + origXml[&apos;_uri&apos;].toString() + &quot;&apos;&quot;);

var instanceXml = reconstructInstanceXml(globalMap.get(&quot;pregnancyRegistrationTableName&quot;), origXml, globalMap.get(&quot;pregnancyRegistrationFormName&quot;));
var auditXml = constructAuditXml(instanceXml, null, &quot;Pregnancy&quot;, origXml[&apos;field_worker_id&apos;].toString(), origXml[&apos;_uri&apos;].toString(), globalMap.get(&quot;pregnancyRegistrationFormName&quot;), origXml[&apos;derived_from_uri&apos;].toString());

router.routeMessage(&quot;Form Submission Channel&quot;, auditXml);
return;</property>
      </properties>
      <transformer>
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>collectedBy - extId (out)</name>
            <script>tmp[&apos;collectedBy&apos;][&apos;extId&apos;] = validate(msg[&apos;fw&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;collectedBy&apos;][&apos;extId&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;fw&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>mother - extid (out)</name>
            <script>tmp[&apos;mother&apos;][&apos;extid&apos;] = validate(msg[&apos;perm_id_pw&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;mother&apos;][&apos;extid&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;perm_id_pw&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>house - extId (out)</name>
            <script>tmp[&apos;house&apos;][&apos;extId&apos;] = validate(msg[&apos;comp_id&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;house&apos;][&apos;extId&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;comp_id&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>household - extId (out)</name>
            <script>tmp[&apos;household&apos;][&apos;extId&apos;] = validate(msg[&apos;hh_id&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;household&apos;][&apos;extId&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;hh_id&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>recordedDate (out)</name>
            <script>tmp[&apos;recordedDate&apos;] = validate(msg[&apos;dint&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;recordedDate&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;dint&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>estimatedDateOfConception (out)</name>
            <script>tmp[&apos;estimatedDateOfConception&apos;] = validate(msg[&apos;lmp&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;estimatedDateOfConception&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;lmp&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>6</sequenceNumber>
            <name>visit - extId (out)</name>
            <script>tmp[&apos;visit&apos;][&apos;extId&apos;] = validate(msg[&apos;visitId&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;visit&apos;][&apos;extId&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;visitId&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>7</sequenceNumber>
            <name>pregWomanName (out)</name>
            <script>tmp[&apos;pregWomanName&apos;] = validate(msg[&apos;name_pw&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;pregWomanName&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;name_pw&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>8</sequenceNumber>
            <name>numMonthsOfPregnancy (out)</name>
            <script>tmp[&apos;numMonthsOfPregnancy&apos;] = validate(msg[&apos;mpreg&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;numMonthsOfPregnancy&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;mpreg&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>9</sequenceNumber>
            <name>attendedAnteNatalClinic (out)</name>
            <script>tmp[&apos;attendedAnteNatalClinic&apos;] = validate(msg[&apos;attend_cli&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;attendedAnteNatalClinic&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;attend_cli&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>10</sequenceNumber>
            <name>receivedTTInjection (out)</name>
            <script>tmp[&apos;receivedTTInjection&apos;] = validate(msg[&apos;tt_inject&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;receivedTTInjection&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;tt_inject&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>11</sequenceNumber>
            <name>firstPregnancy (out)</name>
            <script>tmp[&apos;firstPregnancy&apos;] = validate(msg[&apos;first_pg&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;firstPregnancy&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;first_pg&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>12</sequenceNumber>
            <name>healthFacility (out)</name>
            <script>tmp[&apos;healthFacility&apos;] = validate(msg[&apos;health_fac&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;healthFacility&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;health_fac&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>13</sequenceNumber>
            <name>healthFacilityOther (out)</name>
            <script>tmp[&apos;healthFacilityOther&apos;] = validate(msg[&apos;health_fac_other&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;healthFacilityOther&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;health_fac_other&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>14</sequenceNumber>
            <name>householdName (out)</name>
            <script>tmp[&apos;householdName&apos;] = validate(msg[&apos;hh_name&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;householdName&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;hh_name&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>15</sequenceNumber>
            <name>reportedBy (out)</name>
            <script>tmp[&apos;reportedBy&apos;] = validate(msg[&apos;reportby&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;reportedBy&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;reportby&apos;].toString().toUpperCase()</string>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+DQo8
cmVzdWx0Pg0KICAgIDxfdXJpPnZhbHVlPC9fdXJpPg0KICAgIDxfY3JlYXRpb25fZGF0ZT52YWx1
ZTwvX2NyZWF0aW9uX2RhdGU+DQogICAgPHJlcG9ydGJ5PnZhbHVlPC9yZXBvcnRieT4NCiAgICA8
c3VwZXJ2aXNvcl9zdGF0dXM+dmFsdWU8L3N1cGVydmlzb3Jfc3RhdHVzPg0KICAgIDxob3VzZV9p
ZD52YWx1ZTwvaG91c2VfaWQ+DQogICAgPGhvdXNlaG9sZF9uYW1lPnZhbHVlPC9ob3VzZWhvbGRf
bmFtZT4NCiAgICA8dHRfaW5qZWN0PnZhbHVlPC90dF9pbmplY3Q+DQogICAgPGhlYWx0aF9mYWM+
dmFsdWU8L2hlYWx0aF9mYWM+DQogICAgPGhvdXNlX25hbWU+dmFsdWU8L2hvdXNlX25hbWU+DQog
ICAgPHZhbGlkYXRpb25fZmFpbGVkPnZhbHVlPC92YWxpZGF0aW9uX2ZhaWxlZD4NCiAgICA8aGVh
bHRoX2ZhY19vdGhlcj52YWx1ZTwvaGVhbHRoX2ZhY19vdGhlcj4NCiAgICA8bGFzdF9uYW1lPnZh
bHVlPC9sYXN0X25hbWU+DQogICAgPHZpc2l0X2lkPnZhbHVlPC92aXNpdF9pZD4NCiAgICA8dmlz
aXRfZGF0ZT52YWx1ZTwvdmlzaXRfZGF0ZT4NCiAgICA8YXR0ZW5kX2NsaT52YWx1ZTwvYXR0ZW5k
X2NsaT4NCiAgICA8ZGVyaXZlZF9mcm9tX3VyaT52YWx1ZTwvZGVyaXZlZF9mcm9tX3VyaT4NCiAg
ICA8Zmlyc3RfbmFtZT52YWx1ZTwvZmlyc3RfbmFtZT4NCiAgICA8ZmllbGRfd29ya2VyX2lkPnZh
bHVlPC9maWVsZF93b3JrZXJfaWQ+DQogICAgPGhvdXNlaG9sZF9pZD52YWx1ZTwvaG91c2Vob2xk
X2lkPg0KICAgIDxmaXJzdF9wZz52YWx1ZTwvZmlyc3RfcGc+DQogICAgPHByb2Nlc3NlZF9ieV9t
aXJ0aD52YWx1ZTwvcHJvY2Vzc2VkX2J5X21pcnRoPg0KICAgIDxpbmRpdmlkdWFsX2lkPnZhbHVl
PC9pbmRpdmlkdWFsX2lkPg0KICAgIDxsbXA+dmFsdWU8L2xtcD4NCiAgICA8bXByZWc+dmFsdWU8
L21wcmVnPg0KPC9yZXN1bHQ+DQo=</inboundTemplate>
        <outboundTemplate encoding="base64">PHByZWduYW5jeW9ic2VydmF0aW9uPgogIDxjb2xsZWN0ZWRCeT4KICAgIDxleHRJZCAvPgogIDwv
Y29sbGVjdGVkQnk+CiAgPG1vdGhlcj4KICAgIDxleHRpZCAvPgogIDwvbW90aGVyPgkKICA8aG91
c2U+CiAgICA8ZXh0SWQgLz4KICA8L2hvdXNlPgogIDxob3VzZWhvbGQ+CiAgICA8ZXh0SWQgLz4K
ICA8L2hvdXNlaG9sZD4KICA8ZXhwZWN0ZWREZWxpdmVyeURhdGUgLz4KICA8cmVjb3JkZWREYXRl
IC8+CiAgPGVzdGltYXRlZERhdGVPZkNvbmNlcHRpb24gLz4KICA8dmlzaXQ+CiAgICA8ZXh0SWQg
Lz4KICA8L3Zpc2l0PgogIDxwcmVnV29tYW5OYW1lIC8+CiAgPG51bU1vbnRoc09mUHJlZ25hbmN5
IC8+CiAgPGF0dGVuZGVkQW50ZU5hdGFsQ2xpbmljIC8+CiAgPHJlY2VpdmVkVFRJbmplY3Rpb24g
Lz4KICA8Zmlyc3RQcmVnbmFuY3kgLz4KICA8aGVhbHRoRmFjaWxpdHkgLz4KICA8aGVhbHRoRmFj
aWxpdHlPdGhlciAvPgogIDxob3VzZWhvbGROYW1lIC8+CiAgPHJlcG9ydGVkQnkgLz4KPC9wcmVn
bmFuY3lvYnNlcnZhdGlvbj4=</outboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">true</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.2.1.5861</version>
    </connector>
  </destinationConnectors>
  <properties>
    <property name="clearGlobalChannelMap">true</property>
    <property name="dont_store_filtered">false</property>
    <property name="encryptData">false</property>
    <property name="error_messages_only">false</property>
    <property name="initialState">started</property>
    <property name="max_message_age">-1</property>
    <property name="store_messages">true</property>
    <property name="synchronous">true</property>
    <property name="transactional">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript></postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
</channel>