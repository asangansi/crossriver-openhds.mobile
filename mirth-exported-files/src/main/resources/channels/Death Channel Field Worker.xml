<channel>
  <id>c4d6dbab-0da9-480c-816c-a4dd00f8ba6a</id>
  <name>Death Channel Field Worker</name>
  <description>This channel will read submissions from field workers. Those submissions are then forward to the mobile interop server</description>
  <enabled>true</enabled>
  <version>2.2.1.5861</version>
  <lastModified>
    <time>1349662342389</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>1</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="DataType">Database Reader</property>
      <property name="URL">jdbc:mysql://localhost/${odkDatabaseName}</property>
      <property name="ack"></property>
      <property name="ackScript"></property>
      <property name="driver">com.mysql.jdbc.Driver</property>
      <property name="host">query</property>
      <property name="password">${mysqlPass}</property>
      <property name="pollingFrequency">15000</property>
      <property name="pollingType">interval</property>
      <property name="processResultsInOrder">1</property>
      <property name="query"></property>
      <property name="script">var dbConn = DatabaseConnectionFactory.createDatabaseConnection(globalMap.get(&quot;jdbcDriver&quot;), globalMap.get(&quot;odkJdbcDatabaseUrl&quot;), globalMap.get(&quot;dbUser&quot;), globalMap.get(&quot;dbPass&quot;));
var result = dbConn.executeCachedQuery(&quot;SELECT _URI, _CREATION_DATE, BASIC_INFORMATION_HOUSEHOLD_ID, SORCE_OF_INFORMATON_REPORTED_BY, BASIC_INFORMATION_FIELD_WORKER_ID, SUPERVISOR_STATUS, BASIC_INFORMATION_DATE_OF_DEATH, VALIDATION_FAILED, BASIC_INFORMATION_VISIT_DATE, BASIC_INFORMATION_FIRST_NAME, BASIC_INFORMATION_PLACE_OF_DEATH, BASIC_INFORMATION_LAST_NAME, DERIVED_FROM_URI, BASIC_INFORMATION_PLACE_OF_DEATH_OTHER, BASIC_INFORMATION_VISIT_ID, BASIC_INFORMATION_HOUSE_ID, BASIC_INFORMATION_GENDER, BASIC_INFORMATION_HOUSEHOLD_NAME, PROCESSED_BY_MIRTH, BASIC_INFORMATION_INDIVIDUAL_ID FROM &quot; + globalMap.get(&quot;deathRegistrationTableName&quot;) + &quot; WHERE processed_by_mirth is null AND supervisor_status is null&quot;);
dbConn.close();

return result;</property>
      <property name="useAck">0</property>
      <property name="useScript">1</property>
      <property name="username">${mysqlUser}</property>
    </properties>
    <transformer>
      <steps/>
      <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+DQo8
cmVzdWx0Pg0KICAgIDxfdXJpPnZhbHVlPC9fdXJpPg0KICAgIDxfY3JlYXRpb25fZGF0ZT52YWx1
ZTwvX2NyZWF0aW9uX2RhdGU+DQogICAgPGJhc2ljX2luZm9ybWF0aW9uX2hvdXNlaG9sZF9pZD52
YWx1ZTwvYmFzaWNfaW5mb3JtYXRpb25faG91c2Vob2xkX2lkPg0KICAgIDxzb3JjZV9vZl9pbmZv
cm1hdG9uX3JlcG9ydGVkX2J5PnZhbHVlPC9zb3JjZV9vZl9pbmZvcm1hdG9uX3JlcG9ydGVkX2J5
Pg0KICAgIDxiYXNpY19pbmZvcm1hdGlvbl9maWVsZF93b3JrZXJfaWQ+dmFsdWU8L2Jhc2ljX2lu
Zm9ybWF0aW9uX2ZpZWxkX3dvcmtlcl9pZD4NCiAgICA8c3VwZXJ2aXNvcl9zdGF0dXM+dmFsdWU8
L3N1cGVydmlzb3Jfc3RhdHVzPg0KICAgIDxiYXNpY19pbmZvcm1hdGlvbl9kYXRlX29mX2RlYXRo
PnZhbHVlPC9iYXNpY19pbmZvcm1hdGlvbl9kYXRlX29mX2RlYXRoPg0KICAgIDx2YWxpZGF0aW9u
X2ZhaWxlZD52YWx1ZTwvdmFsaWRhdGlvbl9mYWlsZWQ+DQogICAgPGJhc2ljX2luZm9ybWF0aW9u
X3Zpc2l0X2RhdGU+dmFsdWU8L2Jhc2ljX2luZm9ybWF0aW9uX3Zpc2l0X2RhdGU+DQogICAgPGJh
c2ljX2luZm9ybWF0aW9uX2ZpcnN0X25hbWU+dmFsdWU8L2Jhc2ljX2luZm9ybWF0aW9uX2ZpcnN0
X25hbWU+DQogICAgPGJhc2ljX2luZm9ybWF0aW9uX3BsYWNlX29mX2RlYXRoPnZhbHVlPC9iYXNp
Y19pbmZvcm1hdGlvbl9wbGFjZV9vZl9kZWF0aD4NCiAgICA8YmFzaWNfaW5mb3JtYXRpb25fbGFz
dF9uYW1lPnZhbHVlPC9iYXNpY19pbmZvcm1hdGlvbl9sYXN0X25hbWU+DQogICAgPGRlcml2ZWRf
ZnJvbV91cmk+dmFsdWU8L2Rlcml2ZWRfZnJvbV91cmk+DQogICAgPGJhc2ljX2luZm9ybWF0aW9u
X3BsYWNlX29mX2RlYXRoX290aGVyPnZhbHVlPC9iYXNpY19pbmZvcm1hdGlvbl9wbGFjZV9vZl9k
ZWF0aF9vdGhlcj4NCiAgICA8YmFzaWNfaW5mb3JtYXRpb25fdmlzaXRfaWQ+dmFsdWU8L2Jhc2lj
X2luZm9ybWF0aW9uX3Zpc2l0X2lkPg0KICAgIDxiYXNpY19pbmZvcm1hdGlvbl9ob3VzZV9pZD52
YWx1ZTwvYmFzaWNfaW5mb3JtYXRpb25faG91c2VfaWQ+DQogICAgPGJhc2ljX2luZm9ybWF0aW9u
X2dlbmRlcj52YWx1ZTwvYmFzaWNfaW5mb3JtYXRpb25fZ2VuZGVyPg0KICAgIDxiYXNpY19pbmZv
cm1hdGlvbl9ob3VzZWhvbGRfbmFtZT52YWx1ZTwvYmFzaWNfaW5mb3JtYXRpb25faG91c2Vob2xk
X25hbWU+DQogICAgPHByb2Nlc3NlZF9ieV9taXJ0aD52YWx1ZTwvcHJvY2Vzc2VkX2J5X21pcnRo
Pg0KICAgIDxiYXNpY19pbmZvcm1hdGlvbl9pbmRpdmlkdWFsX2lkPnZhbHVlPC9iYXNpY19pbmZv
cm1hdGlvbl9pbmRpdmlkdWFsX2lkPg0KPC9yZXN1bHQ+DQo=</inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundProtocol>XML</inboundProtocol>
      <outboundProtocol>XML</outboundProtocol>
      <inboundProperties>
        <property name="stripNamespaces">true</property>
      </inboundProperties>
      <outboundProperties>
        <property name="stripNamespaces">true</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules/>
    </filter>
    <transportName>Database Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <version>2.2.1.5861</version>
  </sourceConnector>
  <destinationConnectors>
    <connector>
      <name>Destination 1</name>
      <properties>
        <property name="DataType">JavaScript Writer</property>
        <property name="host">sink</property>
        <property name="script">var origXml = new XML(messageObject.getRawData());

executeUpdateQuery(&quot;UPDATE &quot; + globalMap.get(&quot;deathRegistrationTableName&quot;) + &quot; SET processed_by_mirth = true WHERE _URI = &apos;&quot; + origXml[&apos;_uri&apos;].toString() + &quot;&apos;&quot;);

var instanceXml = reconstructInstanceXml(globalMap.get(&quot;deathRegistrationTableName&quot;), origXml, globalMap.get(&quot;deathRegistrationFormName&quot;));
var auditXml = constructAuditXml(instanceXml, null, &quot;Death&quot;, origXml[&apos;basic_information_field_worker_id&apos;].toString(), origXml[&apos;_uri&apos;].toString(), globalMap.get(&quot;deathRegistrationFormName&quot;), origXml[&apos;derived_from_uri&apos;].toString());

router.routeMessage(&quot;Form Submission Channel&quot;, auditXml);
return;</property>
      </properties>
      <transformer>
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>house - extId (out)</name>
            <script>tmp[&apos;house&apos;][&apos;extId&apos;] = validate(msg[&apos;basic_information_house_id&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;house&apos;][&apos;extId&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;basic_information_house_id&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>household - extId (out)</name>
            <script>tmp[&apos;household&apos;][&apos;extId&apos;] = validate(msg[&apos;basic_information_household_id&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;household&apos;][&apos;extId&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;basic_information_household_id&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>individual - extId (out)</name>
            <script>tmp[&apos;individual&apos;][&apos;extid&apos;] = validate(msg[&apos;basic_information_permanent_id&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;individual&apos;][&apos;extid&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;basic_information_permanent_id&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>collectedBy - extId (out)</name>
            <script>tmp[&apos;collectedBy&apos;][&apos;extId&apos;] = validate(msg[&apos;basic_information_field_worker&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;collectedBy&apos;][&apos;extId&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;basic_information_field_worker&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>deathDate (out)</name>
            <script>tmp[&apos;deathDate&apos;] = validate(msg[&apos;basic_information_date_of_death&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;deathDate&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;basic_information_date_of_death&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>reportedBy (out)</name>
            <script>tmp[&apos;reportedBy&apos;] = validate(msg[&apos;sorce_of_informaton_reported_by&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;reportedBy&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;sorce_of_informaton_reported_by&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>6</sequenceNumber>
            <name>deathPlace (out)</name>
            <script>tmp[&apos;deathPlace&apos;] = validate(msg[&apos;basic_information_place_of_death&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;deathPlace&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;basic_information_place_of_death&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>7</sequenceNumber>
            <name>sex (out)</name>
            <script>tmp[&apos;sex&apos;] = validate(msg[&apos;basic_information_sex&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;sex&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;basic_information_sex&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>8</sequenceNumber>
            <name>placeOfDeathOther (out)</name>
            <script>tmp[&apos;placeOfDeathOther&apos;] = validate(msg[&apos;basic_information_place_of_death_other&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;placeOfDeathOther&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;basic_information_place_of_death_other&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>9</sequenceNumber>
            <name>deceasedName (out)</name>
            <script>tmp[&apos;deceasedName&apos;] = validate(msg[&apos;basic_information_deceased_name&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;deceasedName&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;basic_information_deceased_name&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>10</sequenceNumber>
            <name>householdName (out)</name>
            <script>tmp[&apos;householdName&apos;] = validate(msg[&apos;basic_information_household_name&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;householdName&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;basic_information_household_name&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>11</sequenceNumber>
            <name>recordedDate (out)</name>
            <script>tmp[&apos;recordedDate&apos;] = validate(msg[&apos;basic_information_date_of_interview&apos;].toString().toUpperCase(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;recordedDate&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;basic_information_date_of_interview&apos;].toString().toUpperCase()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>12</sequenceNumber>
            <name>visitDeath - extId (out)</name>
            <script>tmp[&apos;visitDeath&apos;][&apos;extId&apos;] = validate(msg[&apos;visitId&apos;].toString(), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data class="map">
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;visitDeath&apos;][&apos;extId&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;visitId&apos;].toString()</string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+DQo8
cmVzdWx0Pg0KICAgIDxfdXJpPnZhbHVlPC9fdXJpPg0KICAgIDxfY3JlYXRpb25fZGF0ZT52YWx1
ZTwvX2NyZWF0aW9uX2RhdGU+DQogICAgPGJhc2ljX2luZm9ybWF0aW9uX2hvdXNlaG9sZF9pZD52
YWx1ZTwvYmFzaWNfaW5mb3JtYXRpb25faG91c2Vob2xkX2lkPg0KICAgIDxzb3JjZV9vZl9pbmZv
cm1hdG9uX3JlcG9ydGVkX2J5PnZhbHVlPC9zb3JjZV9vZl9pbmZvcm1hdG9uX3JlcG9ydGVkX2J5
Pg0KICAgIDxiYXNpY19pbmZvcm1hdGlvbl9maWVsZF93b3JrZXJfaWQ+dmFsdWU8L2Jhc2ljX2lu
Zm9ybWF0aW9uX2ZpZWxkX3dvcmtlcl9pZD4NCiAgICA8c3VwZXJ2aXNvcl9zdGF0dXM+dmFsdWU8
L3N1cGVydmlzb3Jfc3RhdHVzPg0KICAgIDxiYXNpY19pbmZvcm1hdGlvbl9kYXRlX29mX2RlYXRo
PnZhbHVlPC9iYXNpY19pbmZvcm1hdGlvbl9kYXRlX29mX2RlYXRoPg0KICAgIDx2YWxpZGF0aW9u
X2ZhaWxlZD52YWx1ZTwvdmFsaWRhdGlvbl9mYWlsZWQ+DQogICAgPGJhc2ljX2luZm9ybWF0aW9u
X3Zpc2l0X2RhdGU+dmFsdWU8L2Jhc2ljX2luZm9ybWF0aW9uX3Zpc2l0X2RhdGU+DQogICAgPGJh
c2ljX2luZm9ybWF0aW9uX2ZpcnN0X25hbWU+dmFsdWU8L2Jhc2ljX2luZm9ybWF0aW9uX2ZpcnN0
X25hbWU+DQogICAgPGJhc2ljX2luZm9ybWF0aW9uX3BsYWNlX29mX2RlYXRoPnZhbHVlPC9iYXNp
Y19pbmZvcm1hdGlvbl9wbGFjZV9vZl9kZWF0aD4NCiAgICA8YmFzaWNfaW5mb3JtYXRpb25fbGFz
dF9uYW1lPnZhbHVlPC9iYXNpY19pbmZvcm1hdGlvbl9sYXN0X25hbWU+DQogICAgPGRlcml2ZWRf
ZnJvbV91cmk+dmFsdWU8L2Rlcml2ZWRfZnJvbV91cmk+DQogICAgPGJhc2ljX2luZm9ybWF0aW9u
X3BsYWNlX29mX2RlYXRoX290aGVyPnZhbHVlPC9iYXNpY19pbmZvcm1hdGlvbl9wbGFjZV9vZl9k
ZWF0aF9vdGhlcj4NCiAgICA8YmFzaWNfaW5mb3JtYXRpb25fdmlzaXRfaWQ+dmFsdWU8L2Jhc2lj
X2luZm9ybWF0aW9uX3Zpc2l0X2lkPg0KICAgIDxiYXNpY19pbmZvcm1hdGlvbl9ob3VzZV9pZD52
YWx1ZTwvYmFzaWNfaW5mb3JtYXRpb25faG91c2VfaWQ+DQogICAgPGJhc2ljX2luZm9ybWF0aW9u
X2dlbmRlcj52YWx1ZTwvYmFzaWNfaW5mb3JtYXRpb25fZ2VuZGVyPg0KICAgIDxiYXNpY19pbmZv
cm1hdGlvbl9ob3VzZWhvbGRfbmFtZT52YWx1ZTwvYmFzaWNfaW5mb3JtYXRpb25faG91c2Vob2xk
X25hbWU+DQogICAgPHByb2Nlc3NlZF9ieV9taXJ0aD52YWx1ZTwvcHJvY2Vzc2VkX2J5X21pcnRo
Pg0KICAgIDxiYXNpY19pbmZvcm1hdGlvbl9pbmRpdmlkdWFsX2lkPnZhbHVlPC9iYXNpY19pbmZv
cm1hdGlvbl9pbmRpdmlkdWFsX2lkPg0KPC9yZXN1bHQ+DQo=</inboundTemplate>
        <outboundTemplate encoding="base64">PGRlYXRoPgogIDxob3VzZT4KICAgIDxleHRJZCAvPgogIDwvaG91c2U+CiAgPGhvdXNlaG9sZD4K
ICAgIDxleHRJZCAvPgogIDwvaG91c2Vob2xkPgogIDxpbmRpdmlkdWFsPgogICAgPGV4dGlkIC8+
CiAgPC9pbmRpdmlkdWFsPgogIDxjb2xsZWN0ZWRCeT4KICAgIDxleHRJZCAvPgogIDwvY29sbGVj
dGVkQnk+CiAgPGRlYXRoRGF0ZSAvPgogIDxyZXBvcnRlZEJ5IC8+CiAgPHJlY29yZGVkRGF0ZSAv
PgogIDxkZWF0aFBsYWNlIC8+CiAgPGdlbmRlciAvPgogIDx2aXNpdERlYXRoPgogICAgPGV4dElk
IC8+CiAgPC92aXNpdERlYXRoPgogIDxwbGFjZU9mRGVhdGhPdGhlciAvPgogIDxkZWNlYXNlZE5h
bWUgLz4KICA8aG91c2Vob2xkTmFtZSAvPgo8L2RlYXRoPg==</outboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">true</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.2.1.5861</version>
    </connector>
  </destinationConnectors>
  <properties>
    <property name="clearGlobalChannelMap">true</property>
    <property name="dont_store_filtered">false</property>
    <property name="encryptData">false</property>
    <property name="error_messages_only">false</property>
    <property name="initialState">started</property>
    <property name="max_message_age">-1</property>
    <property name="store_messages">true</property>
    <property name="synchronous">true</property>
    <property name="transactional">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript></postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
</channel>